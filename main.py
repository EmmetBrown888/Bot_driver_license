import os
import logging

from aiogram.dispatcher.filters import Text
from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, InputFile

API_TOKEN = os.getenv("TELEGRAM_API_TOKEN")

# Configure logging
logging.basicConfig(level=logging.INFO)

# Initialize bot and dispatcher
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())

# States
choose_state = None


class FormAlaska(StatesGroup):
    num_licence = State()
    date_of_birth = State()
    sex = State()
    height = State()
    weight = State()
    eyes = State()
    issue_date = State()
    expires_date = State()
    class_drive = State()
    restrictions = State()
    duplicate_num = State()
    address = State()


class FormArkansas(StatesGroup):
    num_licence = State()
    date_of_birth = State()
    sex = State()
    height = State()
    eyes = State()
    issue_date = State()
    expires_date = State()
    class_drive = State()
    first_name = State()
    last_name = State()
    address = State()


async def waiting(message):
    await bot.send_message(message.from_user.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...', parse_mode='Markdown')


@dp.message_handler(commands=['start', 'help'])
@dp.message_handler(Text(equals='‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', ignore_case=True), state=None)
@dp.callback_query_handler(text='–ú–µ–Ω—é')
async def send_welcome(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥: `/start` or `/help` """
    first_text = "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é üëã –í–∞—Å –≤ –±–æ—Ç–µ —Å–µ—Ä–≤–∏—Å–∞ –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –≤–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏—Ö –ø—Ä–∞–≤ –°–®–ê!üá∫üá∏"
    second_text = """
–í–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≤–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ –ø—Ä–∞–≤–∞?
-–í—ã –ø–æ–ø–∞–ª–∏ –∏–º–µ–Ω–Ω–æ —Ç—É–¥–∞.

üî∂ –ò–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å;
üî∂ –ë—ã—Å—Ç—Ä–æ–µ —Å–æ–∑–¥–∞–Ω–∏—è;
üî∂ –ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è –ø–ª–æ—â–∞–¥–∫–∞;

–ú—ã –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —É–ª—É—á—à–∞–µ–º –Ω–∞—à–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –≤–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏—Ö –ø—Ä–∞–≤.

–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞–º —à—Ç–∞—Ç –∏ –æ—Ü–µ–Ω–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏ –ø—Ä–æ—Å—Ç–æ—Ç—É –≤ —Ä–∞–±–æ—Ç–µ.
    """

    buttons = InlineKeyboardMarkup()
    button_alaska = InlineKeyboardButton('üóΩ –ê–ª—è—Å–∫–∞', callback_data='–ê–ª—è—Å–∫–∞')
    button_arkansas = InlineKeyboardButton('üóΩ –ê—Ä–∫–∞–Ω–∑–∞—Å', callback_data='–ê—Ä–∫–∞–Ω–∑–∞—Å')
    buttons \
        .add(button_alaska) \
        .add(button_arkansas)

    await bot.send_message(message.from_user.id, first_text, reply_markup=types.ReplyKeyboardRemove())
    await message.answer(second_text, reply_markup=buttons, parse_mode='Markdown')


@dp.callback_query_handler(text='–ê–ª—è—Å–∫–∞')
async def alaska(message: types.Message):
    global choose_state
    choose_state = 'Alaska'
    photo = InputFile('photos/states/alaska.jpg')
    await waiting(message)
    await bot.send_photo(chat_id=message.from_user.id, photo=photo)

    # –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à–µ —Ñ–æ—Ç–æ
    message_text = '–î–æ–±–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –≤ –±–æ—Ç–∞'
    await bot.send_message(message.from_user.id, message_text, parse_mode='Markdown')


@dp.callback_query_handler(text='–ê—Ä–∫–∞–Ω–∑–∞—Å')
async def arkansas(message: types.Message):
    global choose_state
    choose_state = 'Arkansas'
    photo = InputFile('photos/states/arkansas.jpg')
    await waiting(message)
    await bot.send_photo(chat_id=message.from_user.id, photo=photo)

    # –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à–µ —Ñ–æ—Ç–æ
    message_text = "–î–æ–±–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –≤ –±–æ—Ç–∞"
    await bot.send_message(message.from_user.id, message_text, parse_mode='Markdown')


@dp.message_handler(content_types=['photo'])
async def get_photo(message):
    await waiting(message)
    file_info = await bot.get_file(message.photo[-1].file_id)
    filename = file_info.file_path.split('photos/')[1].split('.')
    await message.photo[-1].download(f'photos/from_user/{message.from_user.id}.{filename[1]}')

    if choose_state == 'Alaska':
        await FormAlaska.num_licence.set()
    else:
        await FormArkansas.num_licence.set()

    await bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –ª–∏—Ü–µ–Ω–∑–∏–∏', parse_mode='Markdown')


if __name__ == '__main__':
    from handlers.alaska import *
    from handlers.arkansas import *

    executor.start_polling(dp, skip_updates=True)
